version: '3.8'

services:
  crop-ai-api:
    build: .
    container_name: crop-ai-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
      - PYTHONUNBUFFERED=1
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - crop-ai-network

  # Optional: Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: crop-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - crop-ai-api
    restart: unless-stopped
    networks:
      - crop-ai-network
    profiles:
      - production

  # Optional: Redis for caching (if needed for scaling)
  redis:
    image: redis:7-alpine
    container_name: crop-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - crop-ai-network
    profiles:
      - production

networks:
  crop-ai-network:
    driver: bridge

volumes:
  redis_data:
